name: Build

on:
  push:
    branches:
      - "main"
    tags:
      - "v*"

  pull_request:
    branches:
      - "main"

jobs:
  sort-imports:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-python
      - run: poetry run isort --check .

  format-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-python
      - run: poetry run black --check .

  check-errors:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-python
      - run: poetry run pyflakes .

  run-tests:
    runs-on: ubuntu-latest
    needs: [sort-imports, format-code, check-errors]
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup-python
      - run: poetry run pytest

  build-image:
    runs-on: ubuntu-latest
    needs: [run-tests]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/pyth-observer

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
